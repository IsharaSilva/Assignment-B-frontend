{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../task-details/task-details.component\";\nfunction TaskListComponent_li_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 11);\n    i0.ɵɵlistener(\"click\", function TaskListComponent_li_11_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const task_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.setActiveTask(task_r1, i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const task_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r2 == ctx_r0.currentIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", task_r1.title, \" \");\n  }\n}\nclass TaskListComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.currentTask = {};\n    this.currentIndex = -1;\n    this.title = '';\n  }\n  ngOnInit() {\n    this.retrieveTasks();\n  }\n  retrieveTasks() {\n    this.taskService.getAll().subscribe({\n      next: data => {\n        this.tasks = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n  refreshList() {\n    this.retrieveTasks();\n    this.currentTask = {};\n    this.currentIndex = -1;\n  }\n  setActiveTask(tutorial, index) {\n    this.currentTask = tutorial;\n    this.currentIndex = index;\n  }\n  removeAllTasks() {\n    this.taskService.deleteAll().subscribe({\n      next: res => {\n        console.log(res);\n        this.refreshList();\n      },\n      error: e => console.error(e)\n    });\n  }\n  searchTitle() {\n    this.currentTask = {};\n    this.currentIndex = -1;\n    this.taskService.findByTitle(this.title).subscribe({\n      next: data => {\n        this.tasks = data;\n        console.log(data);\n      },\n      error: e => console.error(e)\n    });\n  }\n}\nTaskListComponent.ɵfac = function TaskListComponent_Factory(t) {\n  return new (t || TaskListComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n};\nTaskListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TaskListComponent,\n  selectors: [[\"app-task-list\"]],\n  decls: 16,\n  vars: 4,\n  consts: [[1, \"list\", \"row\"], [1, \"col-md-8\"], [1, \"input-group\", \"mb-3\"], [\"type\", \"text\", \"placeholder\", \"Search by title\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"input-group-append\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-secondary\", 3, \"click\"], [1, \"col-md-6\"], [1, \"list-group\"], [\"class\", \"list-group-item\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"m-3\", \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [3, \"viewMode\", \"currentTask\"], [1, \"list-group-item\", 3, \"click\"]],\n  template: function TaskListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function TaskListComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.title = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 4)(5, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_5_listener() {\n        return ctx.searchTitle();\n      });\n      i0.ɵɵtext(6, \" Search \");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(7, \"div\", 6)(8, \"h4\");\n      i0.ɵɵtext(9, \"Tasks List\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"ul\", 7);\n      i0.ɵɵtemplate(11, TaskListComponent_li_11_Template, 2, 3, \"li\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 9);\n      i0.ɵɵlistener(\"click\", function TaskListComponent_Template_button_click_12_listener() {\n        return ctx.removeAllTasks();\n      });\n      i0.ɵɵtext(13, \" Remove All \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"div\", 6);\n      i0.ɵɵelement(15, \"app-task-details\", 10);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.title);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngForOf\", ctx.tasks);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"viewMode\", true)(\"currentTask\", ctx.currentTask);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.TaskDetailsComponent],\n  styles: [\".list[_ngcontent-%COMP%] {\\n  text-align: left;\\n  max-width: 750px;\\n  margin: auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy90YXNrLWxpc3QvdGFzay1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0VBQ2hCLFlBQVk7QUFDZCIsInNvdXJjZXNDb250ZW50IjpbIi5saXN0IHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbWF4LXdpZHRoOiA3NTBweDtcbiAgbWFyZ2luOiBhdXRvO1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});\nexport { TaskListComponent };","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","TaskListComponent_li_11_Template_li_click_0_listener","restoredCtx","ɵɵrestoreView","_r4","task_r1","$implicit","i_r2","index","ctx_r3","ɵɵnextContext","ɵɵresetView","setActiveTask","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","currentIndex","ɵɵadvance","ɵɵtextInterpolate1","title","TaskListComponent","constructor","taskService","currentTask","ngOnInit","retrieveTasks","getAll","subscribe","next","data","tasks","console","log","error","e","refreshList","tutorial","removeAllTasks","deleteAll","res","searchTitle","findByTitle","ɵɵdirectiveInject","i1","TaskService","selectors","decls","vars","consts","template","TaskListComponent_Template","rf","ctx","TaskListComponent_Template_input_ngModelChange_3_listener","$event","TaskListComponent_Template_button_click_5_listener","ɵɵtemplate","TaskListComponent_li_11_Template","TaskListComponent_Template_button_click_12_listener","ɵɵelement","ɵɵproperty"],"sources":["/home/ishara/mean-stack-example/angular-16-client/src/app/components/task-list/task-list.component.ts","/home/ishara/mean-stack-example/angular-16-client/src/app/components/task-list/task-list.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Task } from 'src/app/models/task.model';\nimport { TaskService } from 'src/app/services/task.service';\n\n@Component({\n  selector: 'app-task-list',\n  templateUrl: './task-list.component.html',\n  styleUrls: ['./task-list.component.css'],\n})\nexport class TaskListComponent {\n  tasks?: Task[];\n  currentTask: Task = {};\n  currentIndex = -1;\n  title = '';\n\n  constructor(private taskService: TaskService) {}\n\n  ngOnInit(): void {\n    this.retrieveTasks();\n  }\n\n  retrieveTasks(): void {\n    this.taskService.getAll().subscribe({\n      next: (data) => {\n        this.tasks = data;\n        console.log(data);\n      },\n      error: (e) => console.error(e)\n    });\n  }\n\n  refreshList(): void {\n    this.retrieveTasks();\n    this.currentTask = {};\n    this.currentIndex = -1;\n  }\n\n  setActiveTask(tutorial: Task, index: number): void {\n    this.currentTask = tutorial;\n    this.currentIndex = index;\n  }\n\n  removeAllTasks(): void {\n    this.taskService.deleteAll().subscribe({\n      next: (res) => {\n        console.log(res);\n        this.refreshList();\n      },\n      error: (e) => console.error(e)\n    });\n  }\n\n  searchTitle(): void {\n    this.currentTask = {};\n    this.currentIndex = -1;\n\n    this.taskService.findByTitle(this.title).subscribe({\n      next: (data) => {\n        this.tasks = data;\n        console.log(data);\n      },\n      error: (e) => console.error(e)\n    });\n  }\n}\n","<div class=\"list row\">\n  <div class=\"col-md-8\">\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control\"\n        placeholder=\"Search by title\"\n        [(ngModel)]=\"title\"\n      />\n      <div class=\"input-group-append\">\n        <button\n          class=\"btn btn-outline-secondary\"\n          type=\"button\"\n          (click)=\"searchTitle()\"\n        >\n          Search\n        </button>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <h4>Tasks List</h4>\n    <ul class=\"list-group\">\n      <li\n        class=\"list-group-item\"\n        *ngFor=\"let task of tasks; let i = index\"\n        [class.active]=\"i == currentIndex\"\n        (click)=\"setActiveTask(task, i)\"\n      >\n        {{ task.title }}\n      </li>\n    </ul>\n\n    <button class=\"m-3 btn btn-sm btn-danger\" (click)=\"removeAllTasks()\">\n      Remove All\n    </button>\n  </div>\n  <div class=\"col-md-6\">\n    <app-task-details\n      [viewMode]=\"true\"\n      [currentTask]=\"currentTask\"\n    ></app-task-details>\n  </div>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}